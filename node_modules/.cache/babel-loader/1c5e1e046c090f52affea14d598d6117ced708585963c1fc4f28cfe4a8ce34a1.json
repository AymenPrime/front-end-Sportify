{"ast":null,"code":"// import React, { useState } from 'react';\n// import './matches.css';\n// import videoSource from '../assets/video-back-2.mp4';\n\n// function Match({ team1, team2, date, time }) {\n//   return (\n// <div className=\"match\">\n//   <div className=\"teams\">\n//     <img src='https://api.dicebear.com/9.x/bottts/avif?seed=fldkj' height=\"100px\"/>\n//     <h3>{team1}</h3>\n//     <div className=\"vs-container\">\n//       <p className=\"date-time\">Date: {date}</p>\n//       <h2>vs</h2>\n//       <p className=\"date-time\">Time: {time}</p>\n//     </div>\n//     <h3>{team2}</h3>\n//     <img src='https://api.dicebear.com/9.x/bottts/avif?seed=fldkfdskffd' width=\"100px\"/>\n//   </div>\n// </div>\n//   );\n// }\n\n// const MatchesList = ({ matches }) => {\n//   return (\n//     <div className=\"matches-list\">\n//       {matches.map((match, index) => (\n//         <Match\n//           key={index}\n//           team1={match.team1}\n//           team2={match.team2}\n//           date={match.date}\n//           time={match.time}\n//         />\n//       ))}\n//     </div>\n//   );\n// };\n\n// const Matches = () => {\n//   const [matches, setMatches] = useState([]);\n//   const [isFormVisible, setIsFormVisible] = useState(false);\n\n//   const [newMatch, setNewMatch] = useState({\n//     team1: '',\n//     team2: '',\n//     date: '',\n//     time: '',\n//   });\n\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setNewMatch({\n//       ...newMatch,\n//       [name]: value,\n//     });\n//   };\n\n//   const handleAddMatch = (e) => {\n//     e.preventDefault();\n//     if (newMatch.team1 && newMatch.team2 && newMatch.date && newMatch.time) {\n//       setMatches([...matches, newMatch]);\n//       setNewMatch({ team1: '', team2: '', date: '', time: '' });\n//       setIsFormVisible(false);\n//     } else {\n//       alert('Please fill in all fields!');\n//     }\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <div className=\"video-container\">\n//         <video autoPlay muted loop id=\"myVideo-matches\">\n//           <source src={videoSource} type=\"video/mp4\" />\n//         </video>\n//         <div className=\"video-overlay\"></div>\n//       </div>\n//       <h1>Upcoming Matches</h1>\n//       <button\n//         className=\"add-match-button\"\n//         onClick={() => setIsFormVisible(!isFormVisible)}\n//       >\n//         Add Match\n//       </button>\n\n//       {isFormVisible && (\n//         <div className=\"form-match-overlay\">\n//           <form onSubmit={handleAddMatch} className=\"add-match-form\">\n//             <h2>Add a New Match</h2>\n//             <div className=\"form-group\">\n//               <label>Team 1:</label>\n//               <input\n//                 type=\"text\"\n//                 name=\"team1\"\n//                 value={newMatch.team1}\n//                 onChange={handleInputChange}\n//                 placeholder=\"Enter Team 1\"\n//                 required\n//               />\n//             </div>\n//             <div className=\"form-group\">\n//               <label>Team 2:</label>\n//               <input\n//                 type=\"text\"\n//                 name=\"team2\"\n//                 value={newMatch.team2}\n//                 onChange={handleInputChange}\n//                 placeholder=\"Enter Team 2\"\n//                 required\n//               />\n//             </div>\n//             <div className=\"form-group\">\n//               <label>Date:</label>\n//               <input\n//                 type=\"date\"\n//                 name=\"date\"\n//                 value={newMatch.date}\n//                 onChange={handleInputChange}\n//                 required\n//               />\n//             </div>\n//             <div className=\"form-group\">\n//               <label>Time:</label>\n//               <input\n//                 type=\"time\"\n//                 name=\"time\"\n//                 value={newMatch.time}\n//                 onChange={handleInputChange}\n//                 required\n//               />\n//             </div>\n//             <div className=\"form-buttons\">\n//               <button type=\"submit\" className=\"add-match-button\">\n//                 Add Match\n//               </button>\n//               <button\n//                 type=\"button\"\n//                 className=\"cancel-button\"\n//                 onClick={() => setIsFormVisible(false)}\n//               >\n//                 Cancel\n//               </button>\n//             </div>\n//           </form>\n//         </div>\n//       )}\n//       <MatchesList matches={matches} />\n//     </div>\n//   );\n// };\n\n// export default Matches;","map":{"version":3,"names":[],"sources":["/goinfre/aait-our/site/src/matches/matches.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import './matches.css';\n// import videoSource from '../assets/video-back-2.mp4';\n\n// function Match({ team1, team2, date, time }) {\n//   return (\n// <div className=\"match\">\n//   <div className=\"teams\">\n//     <img src='https://api.dicebear.com/9.x/bottts/avif?seed=fldkj' height=\"100px\"/>\n//     <h3>{team1}</h3>\n//     <div className=\"vs-container\">\n//       <p className=\"date-time\">Date: {date}</p>\n//       <h2>vs</h2>\n//       <p className=\"date-time\">Time: {time}</p>\n//     </div>\n//     <h3>{team2}</h3>\n//     <img src='https://api.dicebear.com/9.x/bottts/avif?seed=fldkfdskffd' width=\"100px\"/>\n//   </div>\n// </div>\n//   );\n// }\n\n// const MatchesList = ({ matches }) => {\n//   return (\n//     <div className=\"matches-list\">\n//       {matches.map((match, index) => (\n//         <Match\n//           key={index}\n//           team1={match.team1}\n//           team2={match.team2}\n//           date={match.date}\n//           time={match.time}\n//         />\n//       ))}\n//     </div>\n//   );\n// };\n\n// const Matches = () => {\n//   const [matches, setMatches] = useState([]);\n//   const [isFormVisible, setIsFormVisible] = useState(false);\n\n//   const [newMatch, setNewMatch] = useState({\n//     team1: '',\n//     team2: '',\n//     date: '',\n//     time: '',\n//   });\n\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setNewMatch({\n//       ...newMatch,\n//       [name]: value,\n//     });\n//   };\n\n//   const handleAddMatch = (e) => {\n//     e.preventDefault();\n//     if (newMatch.team1 && newMatch.team2 && newMatch.date && newMatch.time) {\n//       setMatches([...matches, newMatch]);\n//       setNewMatch({ team1: '', team2: '', date: '', time: '' });\n//       setIsFormVisible(false);\n//     } else {\n//       alert('Please fill in all fields!');\n//     }\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <div className=\"video-container\">\n//         <video autoPlay muted loop id=\"myVideo-matches\">\n//           <source src={videoSource} type=\"video/mp4\" />\n//         </video>\n//         <div className=\"video-overlay\"></div>\n//       </div>\n//       <h1>Upcoming Matches</h1>\n//       <button\n//         className=\"add-match-button\"\n//         onClick={() => setIsFormVisible(!isFormVisible)}\n//       >\n//         Add Match\n//       </button>\n\n\n//       {isFormVisible && (\n//         <div className=\"form-match-overlay\">\n//           <form onSubmit={handleAddMatch} className=\"add-match-form\">\n//             <h2>Add a New Match</h2>\n//             <div className=\"form-group\">\n//               <label>Team 1:</label>\n//               <input\n//                 type=\"text\"\n//                 name=\"team1\"\n//                 value={newMatch.team1}\n//                 onChange={handleInputChange}\n//                 placeholder=\"Enter Team 1\"\n//                 required\n//               />\n//             </div>\n//             <div className=\"form-group\">\n//               <label>Team 2:</label>\n//               <input\n//                 type=\"text\"\n//                 name=\"team2\"\n//                 value={newMatch.team2}\n//                 onChange={handleInputChange}\n//                 placeholder=\"Enter Team 2\"\n//                 required\n//               />\n//             </div>\n//             <div className=\"form-group\">\n//               <label>Date:</label>\n//               <input\n//                 type=\"date\"\n//                 name=\"date\"\n//                 value={newMatch.date}\n//                 onChange={handleInputChange}\n//                 required\n//               />\n//             </div>\n//             <div className=\"form-group\">\n//               <label>Time:</label>\n//               <input\n//                 type=\"time\"\n//                 name=\"time\"\n//                 value={newMatch.time}\n//                 onChange={handleInputChange}\n//                 required\n//               />\n//             </div>\n//             <div className=\"form-buttons\">\n//               <button type=\"submit\" className=\"add-match-button\">\n//                 Add Match\n//               </button>\n//               <button\n//                 type=\"button\"\n//                 className=\"cancel-button\"\n//                 onClick={() => setIsFormVisible(false)}\n//               >\n//                 Cancel\n//               </button>\n//             </div>\n//           </form>\n//         </div>\n//       )}\n//       <MatchesList matches={matches} />\n//     </div>\n//   );\n// };\n\n// export default Matches;"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}